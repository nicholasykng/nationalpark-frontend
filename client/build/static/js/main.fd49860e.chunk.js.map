{"version":3,"sources":["components/navBar.js","components/Home.js","actions/fetchParks.js","containers/ParkCard.js","components/ParksList.js","actions/fetchPark.js","actions/fetchComments.js","components/CommentShow.js","components/CommentList.js","actions/createComment.js","components/CommentNew.js","components/LikeButton.js","actions/likePark.js","actions/deletePark.js","containers/ParkShow.js","containers/Parks.js","actions/createPark.js","containers/ParkNew.js","components/parksearch.js","App.js","serviceWorker.js","reducers/parksReducer.js","reducers/index.js","reducers/commentsReducer.js","index.js"],"names":["NavBar","className","to","Home","Button","variant","Carousel","Item","width","height","src","alt","Caption","fetchParks","dispatch","type","fetch","then","response","json","parks","setParks","ParkCard","park","this","props","name","images","description","key","id","Component","ParksList","state","sorted","renderParks","defaultSort","sort","a","b","likes","map","handleSort","setState","onClick","React","setPark","setComments","comments","CommentShow","comment","content","commenter","CommentList","renderComments","addComment","CommentNew","park_id","parkId","handleOnChange","event","target","value","handleOnSubmit","preventDefault","createComment","onSubmit","FormGroup","controlId","FormLabel","FormControl","onChange","connect","method","headers","body","JSON","stringify","LikeButton","likePark","Badge","addLikes","removePark","ParkShow","handleOnClick","fetchPark","match","params","fetchComments","history","deletePark","activities","directions","ownProps","find","parseInt","updatePark","routerHistory","replace","ParksContainer","exact","path","url","render","component","addPark","ParkNew","createPark","push","ParkSearch","filtered","length","newParkList","filter","lowercaseparkname","toLowerCase","filterpark","includes","App","Parks","Boolean","window","location","hostname","parksReducer","action","concat","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd49860e.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst NavBar = () => {\n    return (\n        <div className=\"navbar\">\n            <NavLink to='/'>Home</NavLink>\n            <NavLink to=\"/parks\">National Parks</NavLink>\n            <NavLink to=\"/search\">Search For A Park</NavLink>\n            <NavLink to=\"/new\">Add A National Park</NavLink>\n        </div>\n    )\n}\nexport default NavBar","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button, Carousel} from 'react-bootstrap'\n\nconst Home = () => {\n    return (\n        <div className=\"Home\">\n            <h1>Welcome To National Park Explorer!</h1>\n            <p>Click the button below to explore the top National Parks in the US along with user's comments to plan your next adventure!</p>\n            <Link to=\"/parks\">\n                <Button variant=\"outline-secondary\">Let's Go!</Button>\n            </Link>\n            \n            <Carousel>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://rt-homepage.roadtrippers.com/wp-content/uploads/2020/03/arches-hero-1920x1080.jpg\"\n                    alt=\"First slide\"/>\n                    <Carousel.Caption>\n                        <h3>Arches National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://www.nationalparks.org/sites/default/files/yellowstone-header.jpg\"\n                    alt=\"Second slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Yellowstone National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://www.rei.com/blog/wp-content/uploads/2018/05/Hawaii-Volcanoes-National-Park_1.jpg\"\n                    alt=\"Third slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Hawai'i Volcanoes National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://redwoodsinyosemite.com/wp-content/uploads/2019/06/Wawona-Tunnel-Page-Banner-Image.jpeg\"\n                    alt=\"Fourth slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Yosemite</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://static.photocdn.pt/images/articles/2018/06/28/articles/2017_8/what_to_photograph_in_glacier_national_park.jpg\"\n                    alt=\"Fifth slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Glacier National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://media.deseretdigital.com/file/2576c93235?type=jpeg&quality=55&c=15&a=4379240d\"\n                    alt=\"Sixth slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Zion National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://media.deseretdigital.com/file/aa89988589?type=jpeg&quality=55&c=15&a=4379240d\"\n                    alt=\"Seventh slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Grand Canyon National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://images.theoutbound.com/uploads/1458603222394/dxkyu7chhtqrh2g7/7b5f3b82f0aeb5c36ac6dcf8fa46bb0d?&fit=crop&w=970&h=550&auto=format&dpr=2&q=60\"\n                    alt=\"8 slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Rocky Mountain National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://www.nppemasterclass.com/wp-content/uploads/2017/10/Grand-Teton.jpg\"\n                    alt=\"9 slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Grand Teton National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    width=\"900px\"\n                    height=\"650px\"\n                    src=\"https://s27363.pcdn.co/wp-content/uploads/2019/11/Acadia-National-Park-Guide.jpg.optimal.jpg\"\n                    alt=\"10 slide\"/>\n\n                    <Carousel.Caption>\n                        <h3>Acadia National Park</h3>\n                    </Carousel.Caption>\n                </Carousel.Item>\n            </Carousel>\n        </div>\n    )\n}\nexport default Home","export const fetchParks = () => {\n    return dispatch => {\n        dispatch({type: \"LOADING_PARKS\"})\n        return fetch('https://national-park.herokuapp.com/parks')\n        .then(response => response.json())\n        .then(parks => dispatch(setParks(parks)))\n         \n    }\n}\n\nconst setParks = parks => {\n    return {\n      type: 'FETCH_PARKS',\n      parks\n    }\n  }\n\n","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\n\nclass ParkCard extends Component {\n    render() {\n        const {park} = this.props\n        return(\n            <div className=\"park-card\">\n            <h4>{park.name}</h4>\n            <img src={park.images} width=\"900px\" height=\"500px\" alt=\"pic\" />\n            <br/>\n            <p>{park.description}</p>\n            <Link key={park.id} to={`/parks/${park.id}`} >\n                <Button variant=\"info\">More Information</Button><br></br>\n            </Link><br></br>\n        </div>\n            \n        )\n    }\n}\nexport default ParkCard\n","import React from 'react'\nimport ParkCard from \"../containers/ParkCard\"\nimport {Button} from 'react-bootstrap'\n\nclass ParksList extends React.Component {\n    state = {\n        sorted: true\n    }\n    renderParks = () => {\n        const defaultSort = this.state.sorted\n        this.props.parks.sort(function(a,b) {\n            if (defaultSort) {\n                return b.likes - a.likes\n            } else {\n                return a.likes - b.likes\n            }\n        })\n        return this.props.parks.map(park => <ParkCard key={park.id} park={park} />)\n    } \n    \n    handleSort = () => {\n        this.setState({\n            sorted: !this.state.sorted\n        })\n    }\n   \n    render() {\n        return (\n            <div>\n                <h1>List of Top National Parks From {this.state.sorted ? \"Most To Least Likes\" : \"Least To Most Likes\"}</h1>\n                <Button variant=\"outline-dark\" className=\"sort-like\" onClick={this.handleSort}>{this.state.sorted ? \"Sort Least to Most Likes\" : \"Sort Most to Least Likes\"}</Button><br></br><br></br>\n                {this.renderParks()}\n            </div>\n        )\n    }\n}\nexport default ParksList","export const fetchPark = (parkId) => {\n    return dispatch => {\n      return fetch(`https://national-park.herokuapp.com/parks/${parkId}`)\n      .then(response => response.json())\n      .then(park => {\n        dispatch(setPark([park]))\n      })\n    }\n  }\n  \n  const setPark = park => {\n    return {\n      type: \"FETCH_PARK\",\n      park\n    }\n  }","export const fetchComments = (parkId) => {\n    return dispatch => {\n        dispatch({type: \"LOADING_COMMENTS\"})\n        return fetch(`https://national-park.herokuapp.com/parks/${parkId}/comments`)\n        .then(response => response.json())\n        .then(comments => dispatch(setComments(comments)))\n    }\n}\n\nconst setComments = comments => {\n    return {\n        type: \"FETCH_COMMENTS\",\n        comments\n    }\n}","import React from 'react'\n\nconst CommentShow = ({comment}) => {\n    return (\n        <div>\n            <li>{comment.content}  -{comment.commenter}</li>\n        </div>\n    )\n}\nexport default CommentShow","import React from 'react'\nimport CommentShow from './CommentShow'\n\nconst CommentList = ({comments}) => {\n    const renderComments = comments.map(comment => <CommentShow key={comment.id} comment={comment} />)\n    return (\n        <div className='comments'>\n            <p>Comments:</p>\n            <ul>\n                {renderComments}\n            </ul>\n        </div>\n    )\n}\nexport default CommentList","export const createComment = (comment) => {\n    return dispatch => {\n        return fetch(`https://national-park.herokuapp.com/${comment.park_id}/comments`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify({comment: comment})\n        })\n        .then(response => response.json())\n        .then(comment => {\n            dispatch(addComment(comment))\n        })\n    }\n}\n\nconst addComment = comment => {\n    return {\n        type: \"ADD_COMMENT\",\n        comment\n    }\n}","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {createComment} from '../actions/createComment'\nimport {FormControl, FormGroup, FormLabel, Button} from 'react-bootstrap'\n\nclass CommentNew extends Component {\n    state = {\n        content: \"\",\n        commenter: \"\",\n        park_id: this.props.parkId\n    }\n    handleOnChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    handleOnSubmit = event => {\n        event.preventDefault()\n        this.props.createComment(this.state)\n        this.setState({\n            content: \"\",\n            commenter: \"\"\n        })\n    }\n    render() {\n        return (\n            <div className=\"comment-new-form\">\n                <h3>Add Comment:</h3>\n                <form onSubmit={this.handleOnSubmit}>\n                    <FormGroup controlId=\"basic-form\">\n                        <FormLabel>Comment:</FormLabel>\n                        <FormControl type=\"text\" value={this.state.content} name=\"content\" onChange={this.handleOnChange} /><br></br>\n                        <FormLabel>Your Name:</FormLabel>\n                        <FormControl type=\"text\" value={this.state.commenter} name=\"commenter\" onChange={this.handleOnChange} /><br></br>\n                        <Button variant=\"outline-success\" type=\"submit\">Submit</Button>\n                    </FormGroup>\n                </form>\n            </div>\n        )\n    }\n}\nexport default connect(null, {createComment})(CommentNew)\n","import React, {Component} from 'react'\nimport {Button, Badge} from 'react-bootstrap'\n\nclass LikeButton extends Component {\n    render() {\n        return (\n            <div>\n                <Button variant=\"success\" className=\"like-park\" onClick={this.props.likePark}>\n                Like<Badge variant=\"light\">{this.props.park.likes}</Badge>\n                </Button>\n            </div>\n        )\n    }\n}\nexport default LikeButton","export const likePark = (park) => {\n    const updatePark = {...park, likes: park.likes + 1}\n    return dispatch => {\n        return fetch(`https://national-park.herokuapp.com/parks/${park.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({park: updatePark})\n        })\n        .then(response => response.json())\n        .then(park => {\n            dispatch(addLikes(park))\n        })\n    }\n}\n\nconst addLikes = park => {\n    return {\n        type: \"LIKE_PARK\",\n        park\n    }\n}","export const deletePark = (parkId, routerHistory) => {\n    return dispatch => {\n        return fetch(`https://national-park.herokuapp.com/parks/${parkId}`, {\n            method: \"DELETE\",\n        })\n        .then(response => {\n            dispatch(removePark(parkId))\n            routerHistory.replace('/parks')\n        })\n    }\n}\n\nconst removePark = id => {\n    return {\n        type: \"REMOVE_PARK\",\n        id\n    }\n}","import React, {Component} from 'react'\nimport {connect} from  'react-redux'\nimport {fetchPark} from '../actions/fetchPark.js'\nimport {fetchComments} from '../actions/fetchComments'\nimport CommentList from '../components/CommentList'\nimport CommentNew from '../components/CommentNew'\nimport LikeButton from '../components/LikeButton'\nimport {likePark} from '../actions/likePark'\nimport {Button} from 'react-bootstrap'\nimport {deletePark} from '../actions/deletePark'\n\nclass ParkShow extends Component {\n    componentDidMount() {\n        this.props.fetchPark(this.props.match.params.parkId)\n        this.props.fetchComments(this.props.match.params.parkId)\n    }\n    handleOnClick = () => {\n        this.props.likePark(this.props.park)\n    }\n    render() {\n        const {park, comments, history, deletePark} = this.props\n        return (\n            <div>\n                <h1>{park.name}</h1>\n                <p>{park.description}</p>\n                <p>Activities: {park.activities}</p>\n                <p>Directions: {park.directions}</p>\n                <img src={park.images} width=\"900px\" height=\"500px\" alt=\"pic\"/><br></br><br></br>\n                <div className=\"likes\">\n                    <LikeButton park={park} likePark={this.handleOnClick} />\n                </div><br></br>\n                <div className=\"comments\">\n                    <CommentList comments={comments} />\n                    <CommentNew parkId={this.props.match.params.parkId} />\n                </div>\n                <div className=\"delete-park\">\n                    <Button onClick={()=> deletePark(park.id, history)}>Delete Park</Button>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const park = state.parks.find(park => park.id === parseInt(ownProps.match.params.parkId, 10)) || {}\n    return ({\n      park: park,\n      comments: state.comments\n      \n    })\n  }\nexport default connect(mapStateToProps, {fetchPark, fetchComments, likePark, deletePark})(ParkShow)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\nimport {fetchParks} from '../actions/fetchParks.js'\nimport ParksList from \"../components/ParksList\"\nimport ParkShow from \"./ParkShow\"\n\nclass ParksContainer extends Component {\n    componentDidMount() {\n        this.props.fetchParks()\n    }\n    render() {\n        const {match, parks} = this.props\n        return (\n            <div>\n                <Switch>\n                <Route exact path={match.url} render={() => (\n                    <ParksList parks={parks} />\n                )}/>\n                <Route path={`${match.url}/:parkId`} component={ParkShow}/>\n                </Switch>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        parks: state.parks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchParks: () => dispatch(fetchParks())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer)","export const createPark = (park) => {\n    return dispatch => {\n        return fetch('https://national-park.herokuapp.com/parks', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n            body: JSON.stringify({park: park})\n        })\n        .then(response => response.json())\n        .then(park => {\n            dispatch(addPark(park))\n        })\n    }\n}\n\nconst addPark = park => {\n    return {\n        type: \"ADD_PARK\",\n        park\n    }\n}\n","import React, {Component} from 'react'\nimport {createPark} from '../actions/createPark'\nimport {connect} from 'react-redux'\nimport {FormControl, FormGroup, FormLabel, Button} from 'react-bootstrap'\n\nclass ParkNew extends Component {\n    state = {\n        name: \"\",\n        description: \"\",\n        activities: \"\",\n        directions: \"\",\n        images: \"\"\n    }\n    handleOnChange = event => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n    handleOnSubmit = event => { \n        event.preventDefault()\n        this.props.createPark(this.state)\n        this.props.history.push(\"/parks\")\n\n    }\n    render () {\n        return (\n            <div className=\"Add-New-Park\">\n                <h1>Add A National Park</h1>\n                <form onSubmit={this.handleOnSubmit}>\n                    <FormGroup>\n                    <FormLabel>National Park Name:</FormLabel>\n                    <FormControl type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleOnChange} /><br></br>\n                    <FormLabel>Description of National Park:</FormLabel>\n                    <FormControl  type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleOnChange} /><br></br>\n                    <FormLabel>List of Activities at the Park:</FormLabel>\n                    <FormControl  type=\"textarea\" name=\"activities\" value={this.state.activities} onChange={this.handleOnChange} /><br></br>\n                    <FormLabel>Directions to the Park:</FormLabel>\n                    <FormControl  type=\"textarea\" name=\"directions\" value={this.state.directions} onChange={this.handleOnChange} /><br></br>\n                    <FormLabel>Image URL:</FormLabel>\n                    <FormControl  type=\"text\" name=\"images\" value={this.state.images} onChange={this.handleOnChange} /><br></br>\n                    <Button variant=\"outline-success\" type=\"submit\">Submit</Button>\n                    </FormGroup>\n                </form>\n            </div>\n        )\n    }\n}\nexport default connect(null, {createPark})(ParkNew)","import React, {Component} from 'react'\nimport {FormControl, FormGroup, FormLabel} from 'react-bootstrap'\nimport ParkCard from \"../containers/ParkCard\"\nimport {connect} from 'react-redux'\nimport {fetchParks} from '../actions/fetchParks.js'\n\nclass ParkSearch extends Component {\n    state = {\n        filtered: []\n    }\n    componentDidMount() {\n        this.props.fetchParks()\n    }\n    renderParks = () => {\n        if (this.state.filtered.length === 0) {\n            return this.props.parks.map(park => <ParkCard key={park.id} park={park} />)\n            }\n        else  {\n            return this.state.filtered.map(park => <ParkCard key={park.id} park={park} />) \n        }\n\n    } \n    handleOnChange = event => {\n            const newParkList = this.props.parks.filter(park => {\n                const lowercaseparkname = park.name.toLowerCase()\n                let filterpark = event.target.value.toLowerCase()\n                return lowercaseparkname.includes(filterpark)\n            })\n       \n        this.setState({\n            filtered: newParkList\n        })\n    }\n    render() {\n        return (\n            <div>\n                <FormGroup>\n                    <FormLabel>Search For A National Park:</FormLabel>\n                    <FormControl type=\"text\" name=\"searchterm\" onChange={this.handleOnChange} />\n                </FormGroup>\n                {this.renderParks()}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        parks: state.parks\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchParks: () => dispatch(fetchParks())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ParkSearch)","import React from 'react';\nimport NavBar from './components/navBar'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Home from './components/Home'\nimport Parks from './containers/Parks'\nimport ParkShow from './containers/ParkShow'\nimport ParkNew from './containers/ParkNew'\nimport ParkSearch from './components/parksearch.js'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/new\" component={ParkNew} />\n          <Route exact path=\"/parks\" component={Parks} />\n          <Route path=\"/parks/:parkId\" component={ParkShow} />\n          <Route exact path=\"/search\" component={ParkSearch} />\n        </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const parksReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"LOADING_PARKS\":\n            return state\n        case \"FETCH_PARKS\":\n            return action.parks\n        case \"FETCH_PARK\":\n            return action.park\n        case \"ADD_PARK\":\n            return state.concat(action.park)\n        case \"REMOVE_PARK\":\n            return state.filter(park => park.id !== action.id)\n        case \"LIKE_PARK\":\n            return state.map((park) => {\n                if (park.id === action.park.id) {\n                    return action.park\n                } else {\n                    return park\n                }\n            })\n        default:\n            return state\n    }\n}\nexport default parksReducer","import {combineReducers} from 'redux'\nimport parksReducer from './parksReducer'\nimport commentsReducer from './commentsReducer'\n\nconst rootReducer = combineReducers({\n    parks: parksReducer,\n    comments: commentsReducer\n})\nexport default rootReducer","export default (state = [], action) => {\n    switch (action.type) {\n        case \"LOADING_COMMENTS\":\n            return state\n        case \"FETCH_COMMENTS\":\n            return action.comments\n        case \"ADD_COMMENT\":\n            return state.concat(action.comment)\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./reducers/index.js\"\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst middleware = [thunk]\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(...middleware)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}