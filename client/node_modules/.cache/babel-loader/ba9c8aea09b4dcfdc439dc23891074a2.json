{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import*as serviceWorker from'./serviceWorker';import{Provider}from'react-redux';import{createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import rootReducer from\"./reducers/index.js\";import{composeWithDevTools}from'redux-devtools-extension';import'bootstrap/dist/css/bootstrap.min.css';var middleware=[thunk];var store=createStore(rootReducer,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));ReactDOM.render(/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(App,null)),document.getElementById('root'));serviceWorker.unregister();","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark-frontend/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","applyMiddleware","thunk","rootReducer","composeWithDevTools","middleware","store","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,OAAQC,QAAR,KAAuB,aAAvB,CACA,OAAQC,WAAR,CAAqBC,eAArB,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAO,sCAAP,CAEA,GAAMC,CAAAA,UAAU,CAAG,CAACH,KAAD,CAAnB,CACA,GAAMI,CAAAA,KAAK,CAAGN,WAAW,CAACG,WAAD,CAAcC,mBAAmB,CACxDH,eAAe,MAAf,QAAmBI,UAAnB,CADwD,CAAjC,CAAzB,CAGAT,QAAQ,CAACW,MAAT,cACE,oBAAC,QAAD,EAAU,KAAK,CAAED,KAAjB,eACE,oBAAC,GAAD,MADF,CADF,CAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,EAOAX,aAAa,CAACY,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./reducers/index.js\"\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst middleware = [thunk]\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(...middleware)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}