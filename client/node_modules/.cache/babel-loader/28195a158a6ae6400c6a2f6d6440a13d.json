{"ast":null,"code":"import _objectSpread from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var likePark=function likePark(park){var updatePark=_objectSpread(_objectSpread({},park),{},{likes:park.likes+1});return function(dispatch){return fetch(\"https://national-park.herokuapp.com/parks/\".concat(park.id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({park:updatePark})}).then(function(response){return response.json();}).then(function(park){dispatch(addLikes(park));});};};var addLikes=function addLikes(park){return{type:\"LIKE_PARK\",park:park};};","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark-frontend/client/src/actions/likePark.js"],"names":["likePark","park","updatePark","likes","dispatch","fetch","id","method","headers","body","JSON","stringify","then","response","json","addLikes","type"],"mappings":"sKAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,UAAU,gCAAOD,IAAP,MAAaE,KAAK,CAAEF,IAAI,CAACE,KAAL,CAAa,CAAjC,EAAhB,CACA,MAAO,UAAAC,QAAQ,CAAI,CACf,MAAOC,CAAAA,KAAK,qDAA8CJ,IAAI,CAACK,EAAnD,EAAyD,CACjEC,MAAM,CAAE,KADyD,CAEjEC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFwD,CAKjEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACV,IAAI,CAAEC,UAAP,CAAf,CAL2D,CAAzD,CAAL,CAONU,IAPM,CAOD,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EAPP,EAQNF,IARM,CAQD,SAAAX,IAAI,CAAI,CACVG,QAAQ,CAACW,QAAQ,CAACd,IAAD,CAAT,CAAR,CACH,CAVM,CAAP,CAWH,CAZD,CAaH,CAfM,CAiBP,GAAMc,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAd,IAAI,CAAI,CACrB,MAAO,CACHe,IAAI,CAAE,WADH,CAEHf,IAAI,CAAJA,IAFG,CAAP,CAIH,CALD","sourcesContent":["export const likePark = (park) => {\n    const updatePark = {...park, likes: park.likes + 1}\n    return dispatch => {\n        return fetch(`https://national-park.herokuapp.com/parks/${park.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({park: updatePark})\n        })\n        .then(response => response.json())\n        .then(park => {\n            dispatch(addLikes(park))\n        })\n    }\n}\n\nconst addLikes = park => {\n    return {\n        type: \"LIKE_PARK\",\n        park\n    }\n}"]},"metadata":{},"sourceType":"module"}