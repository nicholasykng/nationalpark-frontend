{"ast":null,"code":"import _classCallCheck from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{Route,Switch}from'react-router-dom';import{fetchParks as _fetchParks}from'../actions/fetchParks.js';import ParksList from\"../components/ParksList\";import ParkShow from\"./ParkShow\";var ParksContainer=/*#__PURE__*/function(_Component){_inherits(ParksContainer,_Component);var _super=_createSuper(ParksContainer);function ParksContainer(){_classCallCheck(this,ParksContainer);return _super.apply(this,arguments);}_createClass(ParksContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchParks();}},{key:\"render\",value:function render(){var _this$props=this.props,match=_this$props.match,parks=_this$props.parks;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:match.url,render:function render(){return/*#__PURE__*/React.createElement(ParksList,{parks:parks});}}),/*#__PURE__*/React.createElement(Route,{path:\"\".concat(match.url,\"/:parkId\"),component:ParkShow})));}}]);return ParksContainer;}(Component);var mapStateToProps=function mapStateToProps(state){return{parks:state.parks};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchParks:function fetchParks(){return dispatch(_fetchParks());}};};export default connect(mapStateToProps,mapDispatchToProps)(ParksContainer);","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark-frontend/client/src/containers/Parks.js"],"names":["React","Component","connect","Route","Switch","fetchParks","ParksList","ParkShow","ParksContainer","props","match","parks","url","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,CAAeC,MAAf,KAA4B,kBAA5B,CACA,OAAQC,UAAU,GAAVA,CAAAA,WAAR,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,GAEMC,CAAAA,c,4SACkB,CAChB,KAAKC,KAAL,CAAWJ,UAAX,GACH,C,uCACQ,iBACkB,KAAKI,KADvB,CACEC,KADF,aACEA,KADF,CACSC,KADT,aACSA,KADT,CAEL,mBACI,4CACI,oBAAC,MAAD,mBACA,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAED,KAAK,CAACE,GAAzB,CAA8B,MAAM,CAAE,qCAClC,oBAAC,SAAD,EAAW,KAAK,CAAED,KAAlB,EADkC,EAAtC,EADA,cAIA,oBAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACE,GAAX,YAAX,CAAqC,SAAS,CAAEL,QAAhD,EAJA,CADJ,CADJ,CAUH,C,4BAhBwBN,S,EAkB7B,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHH,KAAK,CAAEG,KAAK,CAACH,KADV,CAAP,CAGH,CAJD,CAMA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHX,UAAU,CAAE,4BAAMW,CAAAA,QAAQ,CAACX,WAAU,EAAX,CAAd,EADT,CAAP,CAGH,CAJD,CAMA,cAAeH,CAAAA,OAAO,CAACW,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CP,cAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\nimport {fetchParks} from '../actions/fetchParks.js'\nimport ParksList from \"../components/ParksList\"\nimport ParkShow from \"./ParkShow\"\n\nclass ParksContainer extends Component {\n    componentDidMount() {\n        this.props.fetchParks()\n    }\n    render() {\n        const {match, parks} = this.props\n        return (\n            <div>\n                <Switch>\n                <Route exact path={match.url} render={() => (\n                    <ParksList parks={parks} />\n                )}/>\n                <Route path={`${match.url}/:parkId`} component={ParkShow}/>\n                </Switch>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        parks: state.parks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchParks: () => dispatch(fetchParks())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParksContainer)"]},"metadata":{},"sourceType":"module"}