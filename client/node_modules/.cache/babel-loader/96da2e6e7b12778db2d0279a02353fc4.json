{"ast":null,"code":"import _classCallCheck from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nicholasykng/nationalpark-frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import ParkCard from\"../containers/ParkCard\";import{Button}from'react-bootstrap';var ParksList=/*#__PURE__*/function(_React$Component){_inherits(ParksList,_React$Component);var _super=_createSuper(ParksList);function ParksList(){var _this;_classCallCheck(this,ParksList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={sorted:true};_this.renderParks=function(){var defaultSort=_this.state.sorted;_this.props.parks.sort(function(a,b){if(defaultSort){return b.likes-a.likes;}else{return a.likes-b.likes;}});return _this.props.parks.map(function(park){return/*#__PURE__*/React.createElement(ParkCard,{key:park.id,park:park});});};_this.handleSort=function(){_this.setState({sorted:!_this.state.sorted});};return _this;}_createClass(ParksList,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"List of Top National Parks From \",this.state.sorted?\"Most To Least Likes\":\"Least To Most Likes\"),/*#__PURE__*/React.createElement(Button,{variant:\"outline-dark\",className:\"sort-like\",onClick:this.handleSort},this.state.sorted?\"Sort Least to Most Likes\":\"Sort Most to Least Likes\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),this.renderParks());}}]);return ParksList;}(React.Component);export default ParksList;","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark-frontend/client/src/components/ParksList.js"],"names":["React","ParkCard","Button","ParksList","state","sorted","renderParks","defaultSort","props","parks","sort","a","b","likes","map","park","id","handleSort","setState","Component"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAAQC,MAAR,KAAqB,iBAArB,C,GAEMC,CAAAA,S,mVACFC,K,CAAQ,CACJC,MAAM,CAAE,IADJ,C,OAGRC,W,CAAc,UAAM,CAChB,GAAMC,CAAAA,WAAW,CAAG,MAAKH,KAAL,CAAWC,MAA/B,CACA,MAAKG,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsB,SAASC,CAAT,CAAWC,CAAX,CAAc,CAChC,GAAIL,WAAJ,CAAiB,CACb,MAAOK,CAAAA,CAAC,CAACC,KAAF,CAAUF,CAAC,CAACE,KAAnB,CACH,CAFD,IAEO,CACH,MAAOF,CAAAA,CAAC,CAACE,KAAF,CAAUD,CAAC,CAACC,KAAnB,CACH,CACJ,CAND,EAOA,MAAO,OAAKL,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqB,SAAAC,IAAI,qBAAI,oBAAC,QAAD,EAAU,GAAG,CAAEA,IAAI,CAACC,EAApB,CAAwB,IAAI,CAAED,IAA9B,EAAJ,EAAzB,CAAP,CACH,C,OAEDE,U,CAAa,UAAM,CACf,MAAKC,QAAL,CAAc,CACVb,MAAM,CAAE,CAAC,MAAKD,KAAL,CAAWC,MADV,CAAd,EAGH,C,4EAEQ,CACL,mBACI,4CACI,iEAAqC,KAAKD,KAAL,CAAWC,MAAX,CAAoB,qBAApB,CAA4C,qBAAjF,CADJ,cAEI,oBAAC,MAAD,EAAQ,OAAO,CAAC,cAAhB,CAA+B,SAAS,CAAC,WAAzC,CAAqD,OAAO,CAAE,KAAKY,UAAnE,EAAgF,KAAKb,KAAL,CAAWC,MAAX,CAAoB,0BAApB,CAAiD,0BAAjI,CAFJ,cAEyK,8BAFzK,cAEkL,8BAFlL,CAGK,KAAKC,WAAL,EAHL,CADJ,CAOH,C,uBA9BmBN,KAAK,CAACmB,S,EAgC9B,cAAehB,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport ParkCard from \"../containers/ParkCard\"\nimport {Button} from 'react-bootstrap'\n\nclass ParksList extends React.Component {\n    state = {\n        sorted: true\n    }\n    renderParks = () => {\n        const defaultSort = this.state.sorted\n        this.props.parks.sort(function(a,b) {\n            if (defaultSort) {\n                return b.likes - a.likes\n            } else {\n                return a.likes - b.likes\n            }\n        })\n        return this.props.parks.map(park => <ParkCard key={park.id} park={park} />)\n    } \n    \n    handleSort = () => {\n        this.setState({\n            sorted: !this.state.sorted\n        })\n    }\n   \n    render() {\n        return (\n            <div>\n                <h1>List of Top National Parks From {this.state.sorted ? \"Most To Least Likes\" : \"Least To Most Likes\"}</h1>\n                <Button variant=\"outline-dark\" className=\"sort-like\" onClick={this.handleSort}>{this.state.sorted ? \"Sort Least to Most Likes\" : \"Sort Most to Least Likes\"}</Button><br></br><br></br>\n                {this.renderParks()}\n            </div>\n        )\n    }\n}\nexport default ParksList"]},"metadata":{},"sourceType":"module"}