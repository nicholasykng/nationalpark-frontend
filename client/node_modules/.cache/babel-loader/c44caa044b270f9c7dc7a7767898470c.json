{"ast":null,"code":"var parksReducer=function parksReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"LOADING_PARKS\":return state;case\"FETCH_PARKS\":return action.parks;case\"FETCH_PARK\":return action.park;case\"ADD_PARK\":return state.concat(action.park);case\"REMOVE_PARK\":return state.filter(function(park){return park.id!==action.id;});case\"LIKE_PARK\":return state.map(function(park){if(park.id===action.park.id){return action.park;}else{return park;}});default:return state;}};export default parksReducer;","map":{"version":3,"sources":["/Users/nicholasykng/nationalpark-frontend/client/src/reducers/parksReducer.js"],"names":["parksReducer","state","action","type","parks","park","concat","filter","id","map"],"mappings":"AAAA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACzC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,eAAL,CACI,MAAOF,CAAAA,KAAP,CACJ,IAAK,aAAL,CACI,MAAOC,CAAAA,MAAM,CAACE,KAAd,CACJ,IAAK,YAAL,CACI,MAAOF,CAAAA,MAAM,CAACG,IAAd,CACJ,IAAK,UAAL,CACI,MAAOJ,CAAAA,KAAK,CAACK,MAAN,CAAaJ,MAAM,CAACG,IAApB,CAAP,CACJ,IAAK,aAAL,CACI,MAAOJ,CAAAA,KAAK,CAACM,MAAN,CAAa,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACG,EAAL,GAAYN,MAAM,CAACM,EAAvB,EAAjB,CAAP,CACJ,IAAK,WAAL,CACI,MAAOP,CAAAA,KAAK,CAACQ,GAAN,CAAU,SAACJ,IAAD,CAAU,CACvB,GAAIA,IAAI,CAACG,EAAL,GAAYN,MAAM,CAACG,IAAP,CAAYG,EAA5B,CAAgC,CAC5B,MAAON,CAAAA,MAAM,CAACG,IAAd,CACH,CAFD,IAEO,CACH,MAAOA,CAAAA,IAAP,CACH,CACJ,CANM,CAAP,CAOJ,QACI,MAAOJ,CAAAA,KAAP,CApBR,CAsBH,CAvBD,CAwBA,cAAeD,CAAAA,YAAf","sourcesContent":["const parksReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"LOADING_PARKS\":\n            return state\n        case \"FETCH_PARKS\":\n            return action.parks\n        case \"FETCH_PARK\":\n            return action.park\n        case \"ADD_PARK\":\n            return state.concat(action.park)\n        case \"REMOVE_PARK\":\n            return state.filter(park => park.id !== action.id)\n        case \"LIKE_PARK\":\n            return state.map((park) => {\n                if (park.id === action.park.id) {\n                    return action.park\n                } else {\n                    return park\n                }\n            })\n        default:\n            return state\n    }\n}\nexport default parksReducer"]},"metadata":{},"sourceType":"module"}